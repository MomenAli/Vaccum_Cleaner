

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jan 15 02:32:16 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.10
    24                           ; Generated 31/07/2019 GMT
    25                           ; 
    26                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000D                     	;# 
   191  000E                     	;# 
   192  000E                     	;# 
   193  000F                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0014                     	;# 
   199  0015                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  001D                     	;# 
   210  001E                     	;# 
   211  001F                     	;# 
   212  0081                     	;# 
   213  0085                     	;# 
   214  0086                     	;# 
   215  0087                     	;# 
   216  0088                     	;# 
   217  0089                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  010C                     	;# 
   352  010D                     	;# 
   353  010E                     	;# 
   354  010F                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0008                     	;# 
   366  0009                     	;# 
   367  000A                     	;# 
   368  000B                     	;# 
   369  000C                     	;# 
   370  000D                     	;# 
   371  000E                     	;# 
   372  000E                     	;# 
   373  000F                     	;# 
   374  0010                     	;# 
   375  0011                     	;# 
   376  0012                     	;# 
   377  0013                     	;# 
   378  0014                     	;# 
   379  0015                     	;# 
   380  0015                     	;# 
   381  0016                     	;# 
   382  0017                     	;# 
   383  0018                     	;# 
   384  0019                     	;# 
   385  001A                     	;# 
   386  001B                     	;# 
   387  001B                     	;# 
   388  001C                     	;# 
   389  001D                     	;# 
   390  001E                     	;# 
   391  001F                     	;# 
   392  0081                     	;# 
   393  0085                     	;# 
   394  0086                     	;# 
   395  0087                     	;# 
   396  0088                     	;# 
   397  0089                     	;# 
   398  008C                     	;# 
   399  008D                     	;# 
   400  008E                     	;# 
   401  0091                     	;# 
   402  0092                     	;# 
   403  0093                     	;# 
   404  0094                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009C                     	;# 
   408  009D                     	;# 
   409  009E                     	;# 
   410  009F                     	;# 
   411  010C                     	;# 
   412  010D                     	;# 
   413  010E                     	;# 
   414  010F                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417                           
   418                           	psect	idataCOMMON
   419  05E8                     __pidataCOMMON:	
   420                           
   421                           ;initializer for SW_Update@SW_Time_Counter
   422  05E8  340F               	retlw	15
   423                           
   424                           	psect	idataBANK0
   425  05E9                     __pidataBANK0:	
   426                           
   427                           ;initializer for _SSD_LOT_ARR
   428  05E9  3408               	retlw	8
   429  05EA  3448               	retlw	72
   430  05EB  3449               	retlw	73
   431  05EC  3400               	retlw	0
   432  0008                     _PORTD	set	8
   433  0006                     _PORTB	set	6
   434  0089                     _TRISE	set	137
   435  0087                     _TRISC	set	135
   436  0085                     _TRISA	set	133
   437  0088                     _TRISD	set	136
   438  0086                     _TRISB	set	134
   439                           
   440                           ; #config settings
   441  0000                     
   442                           	psect	cinit
   443  07CF                     start_initialization:	
   444  07CF                     __initialization:	
   445                           
   446                           ; Initialize objects allocated to BANK0
   447  07CF  120A  118A  25E9  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   448  07D4  00AE               	movwf	__pdataBANK0& (0+127)
   449  07D5  120A  118A  25EA  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   450  07DA  00AF               	movwf	(__pdataBANK0+1)& (0+127)
   451  07DB  120A  118A  25EB  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   452  07E0  00B0               	movwf	(__pdataBANK0+2)& (0+127)
   453  07E1  120A  118A  25EC  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   454  07E6  00B1               	movwf	(__pdataBANK0+3)& (0+127)
   455                           
   456                           ; Initialize objects allocated to COMMON
   457  07E7  120A  118A  25E8  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   458  07EC  00FD               	movwf	__pdataCOMMON& (0+127)
   459                           
   460                           ; Clear objects allocated to BANK0
   461  07ED  01A0               	clrf	__pbssBANK0& (0+127)
   462  07EE  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   463  07EF  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   464  07F0  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   465  07F1  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   466  07F2  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   467  07F3  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   468  07F4  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   469  07F5  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   470  07F6  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   471  07F7  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   472  07F8  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   473  07F9  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   474  07FA  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   475                           
   476                           ; Clear objects allocated to COMMON
   477  07FB  01FC               	clrf	__pbssCOMMON& (0+127)
   478  07FC                     end_of_initialization:	
   479                           ;End of C runtime variable initialization code
   480                           
   481  07FC                     __end_of__initialization:	
   482  07FC  0183               	clrf	3
   483  07FD  120A  118A  2F15   	ljmp	_main	;jump to C main() function
   484                           
   485                           	psect	bssCOMMON
   486  007C                     __pbssCOMMON:	
   487  007C                     _currentSSD:	
   488  007C                     	ds	1
   489                           
   490                           	psect	dataCOMMON
   491  007D                     __pdataCOMMON:	
   492  007D                     SW_Update@SW_Time_Counter:	
   493  007D                     	ds	1
   494                           
   495                           	psect	bssBANK0
   496  0020                     __pbssBANK0:	
   497  0020                     _SW_DATA:	
   498  0020                     	ds	9
   499  0029                     _Buffer:	
   500  0029                     	ds	4
   501  002D                     SSD_Update@SSD_Time_Counter:	
   502  002D                     	ds	1
   503                           
   504                           	psect	dataBANK0
   505  002E                     __pdataBANK0:	
   506  002E                     _SSD_LOT_ARR:	
   507  002E                     	ds	4
   508                           
   509                           	psect	cstackCOMMON
   510  0070                     __pcstackCOMMON:	
   511  0070                     ?_SSD_Init:	
   512  0070                     ?_SSD_Set_Symbol:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_SSD_Update:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_SSD_Disable:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ??_SSD_Disable:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_SSD_Data_write:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ??_SSD_Data_write:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_SSD_Enable:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ??_SSD_Enable:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_main:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_GPIO_Init_Port:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_GPIO_Init_Pin:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     SSD_Set_Symbol@index:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     GPIO_Init_Port@DirRegAddress:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     GPIO_Init_Pin@DirRegAddress:	
   552                           ; 2 bytes @ 0x0
   553                           
   554                           
   555                           ; 2 bytes @ 0x0
   556  0070                     	ds	1
   557  0071                     ??_SSD_Set_Symbol:	
   558                           
   559                           ; 1 bytes @ 0x1
   560  0071                     	ds	1
   561  0072                     GPIO_Init_Port@dir:	
   562  0072                     GPIO_Init_Pin@pin_number:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  0072                     SSD_Set_Symbol@symbol:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  0072                     SSD_Disable@s:	
   569                           ; 1 bytes @ 0x2
   570                           
   571  0072                     SSD_Enable@s:	
   572                           ; 1 bytes @ 0x2
   573                           
   574                           
   575                           ; 1 bytes @ 0x2
   576  0072                     	ds	1
   577  0073                     ??_SSD_Update:	
   578  0073                     ??_GPIO_Init_Port:	
   579                           ; 1 bytes @ 0x3
   580                           
   581  0073                     GPIO_Init_Pin@dir:	
   582                           ; 1 bytes @ 0x3
   583                           
   584                           
   585                           ; 1 bytes @ 0x3
   586  0073                     	ds	1
   587  0074                     ??_GPIO_Init_Pin:	
   588                           
   589                           ; 1 bytes @ 0x4
   590  0074                     	ds	1
   591  0075                     _GPIO_Init_Port$65:	
   592                           
   593                           ; 2 bytes @ 0x5
   594  0075                     	ds	2
   595  0077                     GPIO_Init_Pin@ret:	
   596                           
   597                           ; 1 bytes @ 0x7
   598  0077                     	ds	1
   599  0078                     ??_SSD_Init:	
   600                           
   601                           ; 1 bytes @ 0x8
   602  0078                     	ds	1
   603  0079                     ??_main:	
   604                           
   605                           ; 1 bytes @ 0x9
   606  0079                     	ds	3
   607                           
   608                           	psect	maintext
   609  0715                     __pmaintext:	
   610 ;;
   611 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   612 ;;
   613 ;; *************** function _main *****************
   614 ;; Defined at:
   615 ;;		line 17 in file "VaccumCleaner.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : B00/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0
   631 ;;      Temps:          3       0       0       0       0
   632 ;;      Totals:         3       0       0       0       0
   633 ;;Total ram usage:        3 bytes
   634 ;; Hardware stack levels required when called:    2
   635 ;; This function calls:
   636 ;;		_SSD_Init
   637 ;;		_SSD_Set_Symbol
   638 ;;		_SSD_Update
   639 ;; This function is called by:
   640 ;;		Startup code after reset
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _main
   646  0715                     _main:	
   647  0715                     l1164:	
   648                           ;incstack = 0
   649                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   650                           
   651                           
   652                           ;VaccumCleaner.c: 19:     SSD_Init();
   653  0715  120A  118A  2681  120A  118A  	fcall	_SSD_Init
   654  071A                     l1166:	
   655                           
   656                           ;VaccumCleaner.c: 21:     {;VaccumCleaner.c: 22:         _delay((unsigned long)((1000)*(
      +                          8000000/4000.0)));
   657  071A  300B               	movlw	11
   658  071B  00FB               	movwf	??_main+2
   659  071C  3026               	movlw	38
   660  071D  00FA               	movwf	??_main+1
   661  071E  305D               	movlw	93
   662  071F  00F9               	movwf	??_main
   663  0720                     u587:	
   664  0720  0BF9               	decfsz	??_main,f
   665  0721  2F20               	goto	u587
   666  0722  0BFA               	decfsz	??_main+1,f
   667  0723  2F20               	goto	u587
   668  0724  0BFB               	decfsz	??_main+2,f
   669  0725  2F20               	goto	u587
   670  0726  2F27               	nop2
   671  0727                     l1168:	
   672                           
   673                           ;VaccumCleaner.c: 23:         SSD_Set_Symbol(SSD_L_1,SSD_FIRST);
   674  0727  01F0               	clrf	SSD_Set_Symbol@index
   675  0728  3000               	movlw	0
   676  0729  120A  118A  25ED  120A  118A  	fcall	_SSD_Set_Symbol
   677  072E                     l1170:	
   678                           
   679                           ;VaccumCleaner.c: 24:         SSD_Update();
   680  072E  120A  118A  2656  120A  118A  	fcall	_SSD_Update
   681  0733                     l1172:	
   682                           
   683                           ;VaccumCleaner.c: 25:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   684  0733  300B               	movlw	11
   685  0734  00FB               	movwf	??_main+2
   686  0735  3026               	movlw	38
   687  0736  00FA               	movwf	??_main+1
   688  0737  305D               	movlw	93
   689  0738  00F9               	movwf	??_main
   690  0739                     u597:	
   691  0739  0BF9               	decfsz	??_main,f
   692  073A  2F39               	goto	u597
   693  073B  0BFA               	decfsz	??_main+1,f
   694  073C  2F39               	goto	u597
   695  073D  0BFB               	decfsz	??_main+2,f
   696  073E  2F39               	goto	u597
   697  073F  2F40               	nop2
   698                           
   699                           ;VaccumCleaner.c: 26:         SSD_Set_Symbol(SSD_L_2,SSD_SECOND);
   700  0740  01F0               	clrf	SSD_Set_Symbol@index
   701  0741  0AF0               	incf	SSD_Set_Symbol@index,f
   702  0742  3001               	movlw	1
   703  0743  120A  118A  25ED  120A  118A  	fcall	_SSD_Set_Symbol
   704                           
   705                           ;VaccumCleaner.c: 27:         SSD_Update();
   706  0748  120A  118A  2656  120A  118A  	fcall	_SSD_Update
   707  074D                     l1174:	
   708                           
   709                           ;VaccumCleaner.c: 28:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   710  074D  300B               	movlw	11
   711  074E  00FB               	movwf	??_main+2
   712  074F  3026               	movlw	38
   713  0750  00FA               	movwf	??_main+1
   714  0751  305D               	movlw	93
   715  0752  00F9               	movwf	??_main
   716  0753                     u607:	
   717  0753  0BF9               	decfsz	??_main,f
   718  0754  2F53               	goto	u607
   719  0755  0BFA               	decfsz	??_main+1,f
   720  0756  2F53               	goto	u607
   721  0757  0BFB               	decfsz	??_main+2,f
   722  0758  2F53               	goto	u607
   723  0759  2F5A               	nop2
   724  075A                     l1176:	
   725                           
   726                           ;VaccumCleaner.c: 29:         SSD_Set_Symbol(SSD_L_3,SSD_THIRD);
   727  075A  3002               	movlw	2
   728  075B  00F9               	movwf	??_main
   729  075C  0879               	movf	??_main,w
   730  075D  00F0               	movwf	SSD_Set_Symbol@index
   731  075E  3002               	movlw	2
   732  075F  120A  118A  25ED  120A  118A  	fcall	_SSD_Set_Symbol
   733  0764                     l1178:	
   734                           
   735                           ;VaccumCleaner.c: 30:         SSD_Update();
   736  0764  120A  118A  2656  120A  118A  	fcall	_SSD_Update
   737  0769  2F1A               	goto	l1166
   738  076A  120A  118A  2800   	ljmp	start
   739  076D                     __end_of_main:	
   740                           
   741                           	psect	text1
   742  0656                     __ptext1:	
   743 ;; *************** function _SSD_Update *****************
   744 ;; Defined at:
   745 ;;		line 72 in file "SSD.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0
   761 ;;      Temps:          1       0       0       0       0
   762 ;;      Totals:         1       0       0       0       0
   763 ;;Total ram usage:        1 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    1
   766 ;; This function calls:
   767 ;;		_SSD_Data_write
   768 ;;		_SSD_Disable
   769 ;;		_SSD_Enable
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _SSD_Update
   777  0656                     _SSD_Update:	
   778  0656                     l1146:	
   779                           ;incstack = 0
   780                           ; Regs used in _SSD_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   781                           
   782                           
   783                           ;SSD.c: 77:     static uint8 SSD_Time_Counter = 0;;SSD.c: 78:     SSD_Time_Counter += (5
      +                          );
   784  0656  3005               	movlw	5
   785  0657  00F3               	movwf	??_SSD_Update
   786  0658  0873               	movf	??_SSD_Update,w
   787  0659  1283               	bcf	3,5	;RP0=0, select bank0
   788  065A  1303               	bcf	3,6	;RP1=0, select bank0
   789  065B  07AD               	addwf	SSD_Update@SSD_Time_Counter,f
   790                           
   791                           ;SSD.c: 80:     if(SSD_Time_Counter != (5))
   792  065C  3005               	movlw	5
   793  065D  062D               	xorwf	SSD_Update@SSD_Time_Counter,w
   794  065E  1903               	btfsc	3,2
   795  065F  2E61               	goto	u431
   796  0660  2E62               	goto	u430
   797  0661                     u431:	
   798  0661  2E63               	goto	l1150
   799  0662                     u430:	
   800  0662  2E80               	goto	l150
   801  0663                     l1150:	
   802                           
   803                           ;SSD.c: 84:     SSD_Time_Counter = 0;
   804  0663  01AD               	clrf	SSD_Update@SSD_Time_Counter
   805  0664                     l1152:	
   806                           
   807                           ;SSD.c: 87:     SSD_Disable(currentSSD);
   808  0664  087C               	movf	_currentSSD,w
   809  0665  120A  118A  2603  120A  118A  	fcall	_SSD_Disable
   810  066A                     l1154:	
   811                           
   812                           ;SSD.c: 89:     currentSSD++;
   813  066A  3001               	movlw	1
   814  066B  00F3               	movwf	??_SSD_Update
   815  066C  0873               	movf	??_SSD_Update,w
   816  066D  07FC               	addwf	_currentSSD,f
   817  066E                     l1156:	
   818                           
   819                           ;SSD.c: 90:     if(currentSSD > SSD_THIRD)currentSSD = 0;
   820  066E  3003               	movlw	3
   821  066F  027C               	subwf	_currentSSD,w
   822  0670  1C03               	skipc
   823  0671  2E73               	goto	u441
   824  0672  2E74               	goto	u440
   825  0673                     u441:	
   826  0673  2E75               	goto	l1160
   827  0674                     u440:	
   828  0674                     l1158:	
   829  0674  01FC               	clrf	_currentSSD
   830  0675                     l1160:	
   831                           
   832                           ;SSD.c: 92:     SSD_Data_write();
   833  0675  120A  118A  25F7  120A  118A  	fcall	_SSD_Data_write
   834  067A                     l1162:	
   835                           
   836                           ;SSD.c: 94:     SSD_Enable(currentSSD);
   837  067A  087C               	movf	_currentSSD,w
   838  067B  120A  118A  262B  120A  118A  	fcall	_SSD_Enable
   839  0680                     l150:	
   840  0680  0008               	return
   841  0681                     __end_of_SSD_Update:	
   842                           
   843                           	psect	text2
   844  062B                     __ptext2:	
   845 ;; *************** function _SSD_Enable *****************
   846 ;; Defined at:
   847 ;;		line 115 in file "SSD.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  s               1    wreg     enum E865
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  s               1    2[COMMON] enum E865
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         1       0       0       0       0
   863 ;;      Temps:          2       0       0       0       0
   864 ;;      Totals:         3       0       0       0       0
   865 ;;Total ram usage:        3 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_SSD_Update
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function _SSD_Enable
   876  062B                     _SSD_Enable:	
   877                           
   878                           ;incstack = 0
   879                           ; Regs used in _SSD_Enable: [wreg-fsr0h+status,2+status,0]
   880                           ;SSD_Enable@s stored from wreg
   881  062B  00F2               	movwf	SSD_Enable@s
   882  062C                     l1120:	
   883                           
   884                           ;SSD.c: 115: void SSD_Enable(SSD_t s);SSD.c: 116: {;SSD.c: 117:     switch(s)
   885  062C  2E42               	goto	l1128
   886  062D                     l1122:	
   887                           
   888                           ;SSD.c: 120:             (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_ON<<(7)));
   889  062D  1283               	bcf	3,5	;RP0=0, select bank0
   890  062E  1303               	bcf	3,6	;RP1=0, select bank0
   891  062F  0806               	movf	6,w	;volatile
   892  0630  397F               	andlw	127
   893  0631  3880               	iorlw	128
   894  0632  0086               	movwf	6	;volatile
   895                           
   896                           ;SSD.c: 121:             break;
   897  0633  2E55               	goto	l169
   898  0634                     l1124:	
   899                           
   900                           ;SSD.c: 123:             (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_ON<<(6)));
   901  0634  1283               	bcf	3,5	;RP0=0, select bank0
   902  0635  1303               	bcf	3,6	;RP1=0, select bank0
   903  0636  0806               	movf	6,w	;volatile
   904  0637  39BF               	andlw	191
   905  0638  3840               	iorlw	64
   906  0639  0086               	movwf	6	;volatile
   907                           
   908                           ;SSD.c: 124:             break;
   909  063A  2E55               	goto	l169
   910  063B                     l1126:	
   911                           
   912                           ;SSD.c: 126:             (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_ON<<(5)));
   913  063B  1283               	bcf	3,5	;RP0=0, select bank0
   914  063C  1303               	bcf	3,6	;RP1=0, select bank0
   915  063D  0806               	movf	6,w	;volatile
   916  063E  39DF               	andlw	223
   917  063F  3820               	iorlw	32
   918  0640  0086               	movwf	6	;volatile
   919                           
   920                           ;SSD.c: 127:             break;
   921  0641  2E55               	goto	l169
   922  0642                     l1128:	
   923  0642  0872               	movf	SSD_Enable@s,w
   924  0643  00F0               	movwf	??_SSD_Enable
   925  0644  01F1               	clrf	??_SSD_Enable+1
   926                           
   927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   928                           ; Switch size 1, requested type "simple"
   929                           ; Number of cases is 1, Range of values is 0 to 0
   930                           ; switch strategies available:
   931                           ; Name         Instructions Cycles
   932                           ; simple_byte            4     3 (average)
   933                           ; direct_byte           11     8 (fixed)
   934                           ; jumptable            260     6 (fixed)
   935                           ;	Chosen strategy is simple_byte
   936  0645  0871               	movf	??_SSD_Enable+1,w
   937  0646  3A00               	xorlw	0	; case 0
   938  0647  1903               	skipnz
   939  0648  2E4A               	goto	l1336
   940  0649  2E55               	goto	l169
   941  064A                     l1336:	
   942                           
   943                           ; Switch size 1, requested type "simple"
   944                           ; Number of cases is 3, Range of values is 0 to 2
   945                           ; switch strategies available:
   946                           ; Name         Instructions Cycles
   947                           ; simple_byte           10     6 (average)
   948                           ; direct_byte           17     8 (fixed)
   949                           ; jumptable            260     6 (fixed)
   950                           ;	Chosen strategy is simple_byte
   951  064A  0870               	movf	??_SSD_Enable,w
   952  064B  3A00               	xorlw	0	; case 0
   953  064C  1903               	skipnz
   954  064D  2E2D               	goto	l1122
   955  064E  3A01               	xorlw	1	; case 1
   956  064F  1903               	skipnz
   957  0650  2E34               	goto	l1124
   958  0651  3A03               	xorlw	3	; case 2
   959  0652  1903               	skipnz
   960  0653  2E3B               	goto	l1126
   961  0654  2E55               	goto	l169
   962  0655                     l169:	
   963  0655  0008               	return
   964  0656                     __end_of_SSD_Enable:	
   965                           
   966                           	psect	text3
   967  0603                     __ptext3:	
   968 ;; *************** function _SSD_Disable *****************
   969 ;; Defined at:
   970 ;;		line 97 in file "SSD.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  s               1    wreg     enum E865
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  s               1    2[COMMON] enum E865
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         0       0       0       0       0
   985 ;;      Locals:         1       0       0       0       0
   986 ;;      Temps:          2       0       0       0       0
   987 ;;      Totals:         3       0       0       0       0
   988 ;;Total ram usage:        3 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_SSD_Update
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _SSD_Disable
   999  0603                     _SSD_Disable:	
  1000                           
  1001                           ;incstack = 0
  1002                           ; Regs used in _SSD_Disable: [wreg-fsr0h+status,2+status,0]
  1003                           ;SSD_Disable@s stored from wreg
  1004  0603  00F2               	movwf	SSD_Disable@s
  1005  0604                     l1104:	
  1006                           
  1007                           ;SSD.c: 97: void SSD_Disable(SSD_t s);SSD.c: 98: {;SSD.c: 99:     switch(s)
  1008  0604  2E17               	goto	l1112
  1009  0605                     l1106:	
  1010                           
  1011                           ;SSD.c: 102:             (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_OFF<<(7)));
  1012  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0607  0806               	movf	6,w	;volatile
  1015  0608  397F               	andlw	127
  1016  0609  0086               	movwf	6	;volatile
  1017                           
  1018                           ;SSD.c: 103:             break;
  1019  060A  2E2A               	goto	l160
  1020  060B                     l1108:	
  1021                           
  1022                           ;SSD.c: 105:             (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_OFF<<(6)));
  1023  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1024  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1025  060D  0806               	movf	6,w	;volatile
  1026  060E  39BF               	andlw	191
  1027  060F  0086               	movwf	6	;volatile
  1028                           
  1029                           ;SSD.c: 106:             break;
  1030  0610  2E2A               	goto	l160
  1031  0611                     l1110:	
  1032                           
  1033                           ;SSD.c: 108:             (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_OFF<<(5)));
  1034  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0613  0806               	movf	6,w	;volatile
  1037  0614  39DF               	andlw	223
  1038  0615  0086               	movwf	6	;volatile
  1039                           
  1040                           ;SSD.c: 109:             break;
  1041  0616  2E2A               	goto	l160
  1042  0617                     l1112:	
  1043  0617  0872               	movf	SSD_Disable@s,w
  1044  0618  00F0               	movwf	??_SSD_Disable
  1045  0619  01F1               	clrf	??_SSD_Disable+1
  1046                           
  1047                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1048                           ; Switch size 1, requested type "simple"
  1049                           ; Number of cases is 1, Range of values is 0 to 0
  1050                           ; switch strategies available:
  1051                           ; Name         Instructions Cycles
  1052                           ; simple_byte            4     3 (average)
  1053                           ; direct_byte           11     8 (fixed)
  1054                           ; jumptable            260     6 (fixed)
  1055                           ;	Chosen strategy is simple_byte
  1056  061A  0871               	movf	??_SSD_Disable+1,w
  1057  061B  3A00               	xorlw	0	; case 0
  1058  061C  1903               	skipnz
  1059  061D  2E1F               	goto	l1338
  1060  061E  2E2A               	goto	l160
  1061  061F                     l1338:	
  1062                           
  1063                           ; Switch size 1, requested type "simple"
  1064                           ; Number of cases is 3, Range of values is 0 to 2
  1065                           ; switch strategies available:
  1066                           ; Name         Instructions Cycles
  1067                           ; simple_byte           10     6 (average)
  1068                           ; direct_byte           17     8 (fixed)
  1069                           ; jumptable            260     6 (fixed)
  1070                           ;	Chosen strategy is simple_byte
  1071  061F  0870               	movf	??_SSD_Disable,w
  1072  0620  3A00               	xorlw	0	; case 0
  1073  0621  1903               	skipnz
  1074  0622  2E05               	goto	l1106
  1075  0623  3A01               	xorlw	1	; case 1
  1076  0624  1903               	skipnz
  1077  0625  2E0B               	goto	l1108
  1078  0626  3A03               	xorlw	3	; case 2
  1079  0627  1903               	skipnz
  1080  0628  2E11               	goto	l1110
  1081  0629  2E2A               	goto	l160
  1082  062A                     l160:	
  1083  062A  0008               	return
  1084  062B                     __end_of_SSD_Disable:	
  1085                           
  1086                           	psect	text4
  1087  05F7                     __ptext4:	
  1088 ;; *************** function _SSD_Data_write *****************
  1089 ;; Defined at:
  1090 ;;		line 135 in file "SSD.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0
  1106 ;;      Temps:          0       0       0       0       0
  1107 ;;      Totals:         0       0       0       0       0
  1108 ;;Total ram usage:        0 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_SSD_Update
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _SSD_Data_write
  1119  05F7                     _SSD_Data_write:	
  1120  05F7                     l1118:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _SSD_Data_write: [wreg-fsr0h+status,2+status,0]
  1123                           
  1124                           
  1125                           ;SSD.c: 138:     (((PORTD))=(SSD_LOT_ARR[Buffer[currentSSD]]));
  1126  05F7  087C               	movf	_currentSSD,w
  1127  05F8  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  1128  05F9  0084               	movwf	4
  1129  05FA  1383               	bcf	3,7	;select IRP bank0
  1130  05FB  0800               	movf	0,w
  1131  05FC  3E2E               	addlw	(low (_SSD_LOT_ARR| 0))& (0+255)
  1132  05FD  0084               	movwf	4
  1133  05FE  0800               	movf	0,w
  1134  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0601  0088               	movwf	8	;volatile
  1137  0602                     l172:	
  1138  0602  0008               	return
  1139  0603                     __end_of_SSD_Data_write:	
  1140                           
  1141                           	psect	text5
  1142  05ED                     __ptext5:	
  1143 ;; *************** function _SSD_Set_Symbol *****************
  1144 ;; Defined at:
  1145 ;;		line 67 in file "SSD.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  symbol          1    wreg     enum E859
  1148 ;;  index           1    0[COMMON] enum E865
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  symbol          1    2[COMMON] enum E859
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         1       0       0       0       0
  1161 ;;      Locals:         1       0       0       0       0
  1162 ;;      Temps:          1       0       0       0       0
  1163 ;;      Totals:         3       0       0       0       0
  1164 ;;Total ram usage:        3 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           
  1174                           ;psect for function _SSD_Set_Symbol
  1175  05ED                     _SSD_Set_Symbol:	
  1176                           
  1177                           ;incstack = 0
  1178                           ; Regs used in _SSD_Set_Symbol: [wreg-fsr0h+status,2+status,0]
  1179                           ;SSD_Set_Symbol@symbol stored from wreg
  1180  05ED  00F2               	movwf	SSD_Set_Symbol@symbol
  1181  05EE                     l1144:	
  1182                           
  1183                           ;SSD.c: 67: void SSD_Set_Symbol(SSD_Symbol_t symbol,SSD_t index);SSD.c: 68: {;SSD.c: 70:
      +                               Buffer[index] = symbol;
  1184  05EE  0872               	movf	SSD_Set_Symbol@symbol,w
  1185  05EF  00F1               	movwf	??_SSD_Set_Symbol
  1186  05F0  0870               	movf	SSD_Set_Symbol@index,w
  1187  05F1  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  1188  05F2  0084               	movwf	4
  1189  05F3  0871               	movf	??_SSD_Set_Symbol,w
  1190  05F4  1383               	bcf	3,7	;select IRP bank0
  1191  05F5  0080               	movwf	0
  1192  05F6                     l144:	
  1193  05F6  0008               	return
  1194  05F7                     __end_of_SSD_Set_Symbol:	
  1195                           
  1196                           	psect	text6
  1197  0681                     __ptext6:	
  1198 ;; *************** function _SSD_Init *****************
  1199 ;; Defined at:
  1200 ;;		line 51 in file "SSD.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         0       0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0
  1216 ;;      Temps:          1       0       0       0       0
  1217 ;;      Totals:         1       0       0       0       0
  1218 ;;Total ram usage:        1 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    1
  1221 ;; This function calls:
  1222 ;;		_GPIO_Init_Pin
  1223 ;;		_GPIO_Init_Port
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _SSD_Init
  1231  0681                     _SSD_Init:	
  1232  0681                     l1134:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _SSD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1235                           
  1236                           
  1237                           ;SSD.c: 54:     GPIO_Init_Port(&(TRISD),(0));
  1238  0681  3088               	movlw	136
  1239  0682  00F0               	movwf	GPIO_Init_Port@DirRegAddress
  1240  0683  3000               	movlw	0
  1241  0684  00F1               	movwf	GPIO_Init_Port@DirRegAddress+1
  1242  0685  01F2               	clrf	GPIO_Init_Port@dir
  1243  0686  120A  118A  26C5  120A  118A  	fcall	_GPIO_Init_Port
  1244                           
  1245                           ;SSD.c: 57:     GPIO_Init_Pin(&(TRISB),(7),(0));
  1246  068B  3086               	movlw	134
  1247  068C  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  1248  068D  3000               	movlw	0
  1249  068E  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1250  068F  3007               	movlw	7
  1251  0690  00F8               	movwf	??_SSD_Init
  1252  0691  0878               	movf	??_SSD_Init,w
  1253  0692  00F2               	movwf	GPIO_Init_Pin@pin_number
  1254  0693  01F3               	clrf	GPIO_Init_Pin@dir
  1255  0694  120A  118A  276D  120A  118A  	fcall	_GPIO_Init_Pin
  1256  0699                     l1136:	
  1257                           
  1258                           ;SSD.c: 58:     (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_OFF<<(7)));
  1259  0699  1283               	bcf	3,5	;RP0=0, select bank0
  1260  069A  1303               	bcf	3,6	;RP1=0, select bank0
  1261  069B  0806               	movf	6,w	;volatile
  1262  069C  397F               	andlw	127
  1263  069D  0086               	movwf	6	;volatile
  1264  069E                     l1138:	
  1265                           
  1266                           ;SSD.c: 60:     GPIO_Init_Pin(&(TRISB),(6),(0));
  1267  069E  3086               	movlw	134
  1268  069F  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  1269  06A0  3000               	movlw	0
  1270  06A1  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1271  06A2  3006               	movlw	6
  1272  06A3  00F8               	movwf	??_SSD_Init
  1273  06A4  0878               	movf	??_SSD_Init,w
  1274  06A5  00F2               	movwf	GPIO_Init_Pin@pin_number
  1275  06A6  01F3               	clrf	GPIO_Init_Pin@dir
  1276  06A7  120A  118A  276D  120A  118A  	fcall	_GPIO_Init_Pin
  1277                           
  1278                           ;SSD.c: 61:     (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_OFF<<(6)));
  1279  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1280  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1281  06AE  0806               	movf	6,w	;volatile
  1282  06AF  39BF               	andlw	191
  1283  06B0  0086               	movwf	6	;volatile
  1284  06B1                     l1140:	
  1285                           
  1286                           ;SSD.c: 63:     GPIO_Init_Pin(&(TRISB),(5),(0));
  1287  06B1  3086               	movlw	134
  1288  06B2  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  1289  06B3  3000               	movlw	0
  1290  06B4  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1291  06B5  3005               	movlw	5
  1292  06B6  00F8               	movwf	??_SSD_Init
  1293  06B7  0878               	movf	??_SSD_Init,w
  1294  06B8  00F2               	movwf	GPIO_Init_Pin@pin_number
  1295  06B9  01F3               	clrf	GPIO_Init_Pin@dir
  1296  06BA  120A  118A  276D  120A  118A  	fcall	_GPIO_Init_Pin
  1297  06BF                     l1142:	
  1298                           
  1299                           ;SSD.c: 64:     (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_OFF<<(5)));
  1300  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1301  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1302  06C1  0806               	movf	6,w	;volatile
  1303  06C2  39DF               	andlw	223
  1304  06C3  0086               	movwf	6	;volatile
  1305  06C4                     l141:	
  1306  06C4  0008               	return
  1307  06C5                     __end_of_SSD_Init:	
  1308                           
  1309                           	psect	text7
  1310  06C5                     __ptext7:	
  1311 ;; *************** function _GPIO_Init_Port *****************
  1312 ;; Defined at:
  1313 ;;		line 14 in file "GPIO.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  DirRegAddres    2    0[COMMON] PTR unsigned char 
  1316 ;;		 -> TRISD(1), 
  1317 ;;  dir             1    2[COMMON] unsigned char 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  ret             1    0        unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      unsigned char 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1329 ;;      Params:         3       0       0       0       0
  1330 ;;      Locals:         3       0       0       0       0
  1331 ;;      Temps:          1       0       0       0       0
  1332 ;;      Totals:         7       0       0       0       0
  1333 ;;Total ram usage:        7 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_SSD_Init
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function _GPIO_Init_Port
  1344  06C5                     _GPIO_Init_Port:	
  1345  06C5                     l1060:	
  1346                           ;incstack = 0
  1347                           ; Regs used in _GPIO_Init_Port: [wreg-fsr0h+status,2+status,0]
  1348                           
  1349  06C5                     l1062:	
  1350                           
  1351                           ;GPIO.c: 18:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  1352  06C5  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  1353  06C6  0084               	movwf	4
  1354  06C7  1783               	bsf	3,7
  1355  06C8  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1356  06C9  1383               	bcf	3,7
  1357  06CA  0800               	movf	0,w
  1358  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  1359  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  1360  06CD  0605               	xorwf	5,w	;volatile
  1361  06CE  1903               	skipnz
  1362  06CF  2ED1               	goto	u301
  1363  06D0  2ED2               	goto	u300
  1364  06D1                     u301:	
  1365  06D1  2EFF               	goto	l1074
  1366  06D2                     u300:	
  1367  06D2                     l1064:	
  1368  06D2  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  1369  06D3  0084               	movwf	4
  1370  06D4  1783               	bsf	3,7
  1371  06D5  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1372  06D6  1383               	bcf	3,7
  1373  06D7  0800               	movf	0,w
  1374  06D8  0606               	xorwf	6,w	;volatile
  1375  06D9  1903               	skipnz
  1376  06DA  2EDC               	goto	u311
  1377  06DB  2EDD               	goto	u310
  1378  06DC                     u311:	
  1379  06DC  2EFF               	goto	l1074
  1380  06DD                     u310:	
  1381  06DD                     l1066:	
  1382  06DD  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  1383  06DE  0084               	movwf	4
  1384  06DF  1783               	bsf	3,7
  1385  06E0  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1386  06E1  1383               	bcf	3,7
  1387  06E2  0800               	movf	0,w
  1388  06E3  0607               	xorwf	7,w	;volatile
  1389  06E4  1903               	skipnz
  1390  06E5  2EE7               	goto	u321
  1391  06E6  2EE8               	goto	u320
  1392  06E7                     u321:	
  1393  06E7  2EFF               	goto	l1074
  1394  06E8                     u320:	
  1395  06E8                     l1068:	
  1396  06E8  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  1397  06E9  0084               	movwf	4
  1398  06EA  1783               	bsf	3,7
  1399  06EB  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1400  06EC  1383               	bcf	3,7
  1401  06ED  0800               	movf	0,w
  1402  06EE  0608               	xorwf	8,w	;volatile
  1403  06EF  1903               	skipnz
  1404  06F0  2EF2               	goto	u331
  1405  06F1  2EF3               	goto	u330
  1406  06F2                     u331:	
  1407  06F2  2EFF               	goto	l1074
  1408  06F3                     u330:	
  1409  06F3                     l1070:	
  1410  06F3  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  1411  06F4  0084               	movwf	4
  1412  06F5  1783               	bsf	3,7
  1413  06F6  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1414  06F7  1383               	bcf	3,7
  1415  06F8  0800               	movf	0,w
  1416  06F9  0609               	xorwf	9,w	;volatile
  1417  06FA  1903               	skipnz
  1418  06FB  2EFD               	goto	u341
  1419  06FC  2EFE               	goto	u340
  1420  06FD                     u341:	
  1421  06FD  2EFF               	goto	l1074
  1422  06FE                     u340:	
  1423  06FE                     l1072:	
  1424                           
  1425                           ;GPIO.c: 24:     }
  1426  06FE  2F14               	goto	l35
  1427  06FF                     l1074:	
  1428                           
  1429                           ;GPIO.c: 26:     {;GPIO.c: 27:         ((*DirRegAddress)=(dir)?(~0):(0));
  1430  06FF  0872               	movf	GPIO_Init_Port@dir,w
  1431  0700  1D03               	btfss	3,2
  1432  0701  2F03               	goto	u351
  1433  0702  2F04               	goto	u350
  1434  0703                     u351:	
  1435  0703  2F07               	goto	l1078
  1436  0704                     u350:	
  1437  0704                     l1076:	
  1438  0704  01F5               	clrf	_GPIO_Init_Port$65
  1439  0705  01F6               	clrf	_GPIO_Init_Port$65+1
  1440  0706  2F0B               	goto	l1080
  1441  0707                     l1078:	
  1442  0707  30FF               	movlw	255
  1443  0708  00F5               	movwf	_GPIO_Init_Port$65
  1444  0709  30FF               	movlw	255
  1445  070A  00F6               	movwf	_GPIO_Init_Port$65+1
  1446  070B                     l1080:	
  1447  070B  0875               	movf	_GPIO_Init_Port$65,w
  1448  070C  00F3               	movwf	??_GPIO_Init_Port
  1449  070D  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  1450  070E  0084               	movwf	4
  1451  070F  1783               	bsf	3,7
  1452  0710  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1453  0711  1383               	bcf	3,7
  1454  0712  0873               	movf	??_GPIO_Init_Port,w
  1455  0713  0080               	movwf	0
  1456  0714                     l35:	
  1457  0714  0008               	return
  1458  0715                     __end_of_GPIO_Init_Port:	
  1459                           
  1460                           	psect	text8
  1461  076D                     __ptext8:	
  1462 ;; *************** function _GPIO_Init_Pin *****************
  1463 ;; Defined at:
  1464 ;;		line 34 in file "GPIO.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  DirRegAddres    2    0[COMMON] PTR unsigned char 
  1467 ;;		 -> TRISB(1), 
  1468 ;;  pin_number      1    2[COMMON] unsigned char 
  1469 ;;  dir             1    3[COMMON] unsigned char 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  ret             1    7[COMMON] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      unsigned char 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1481 ;;      Params:         4       0       0       0       0
  1482 ;;      Locals:         1       0       0       0       0
  1483 ;;      Temps:          3       0       0       0       0
  1484 ;;      Totals:         8       0       0       0       0
  1485 ;;Total ram usage:        8 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_SSD_Init
  1491 ;;		_SW_Init
  1492 ;;		_LED_Init
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _GPIO_Init_Pin
  1498  076D                     _GPIO_Init_Pin:	
  1499  076D                     l1084:	
  1500                           ;incstack = 0
  1501                           ; Regs used in _GPIO_Init_Pin: [wreg-fsr0h+status,2+status,0]
  1502                           
  1503                           
  1504                           ;GPIO.c: 34: uint8 GPIO_Init_Pin(uint8 *DirRegAddress ,uint8 pin_number,uint8 dir );GPIO
      +                          .c: 35: {;GPIO.c: 36:     uint8 ret = 1;
  1505  076D  01F7               	clrf	GPIO_Init_Pin@ret
  1506  076E  0AF7               	incf	GPIO_Init_Pin@ret,f
  1507  076F                     l1086:	
  1508                           
  1509                           ;GPIO.c: 38:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  1510  076F  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1511  0770  0084               	movwf	4
  1512  0771  1783               	bsf	3,7
  1513  0772  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1514  0773  1383               	bcf	3,7
  1515  0774  0800               	movf	0,w
  1516  0775  1683               	bsf	3,5	;RP0=1, select bank1
  1517  0776  1303               	bcf	3,6	;RP1=0, select bank1
  1518  0777  0605               	xorwf	5,w	;volatile
  1519  0778  1903               	skipnz
  1520  0779  2F7B               	goto	u361
  1521  077A  2F7C               	goto	u360
  1522  077B                     u361:	
  1523  077B  2FAA               	goto	l1098
  1524  077C                     u360:	
  1525  077C                     l1088:	
  1526  077C  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1527  077D  0084               	movwf	4
  1528  077E  1783               	bsf	3,7
  1529  077F  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1530  0780  1383               	bcf	3,7
  1531  0781  0800               	movf	0,w
  1532  0782  0606               	xorwf	6,w	;volatile
  1533  0783  1903               	skipnz
  1534  0784  2F86               	goto	u371
  1535  0785  2F87               	goto	u370
  1536  0786                     u371:	
  1537  0786  2FAA               	goto	l1098
  1538  0787                     u370:	
  1539  0787                     l1090:	
  1540  0787  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1541  0788  0084               	movwf	4
  1542  0789  1783               	bsf	3,7
  1543  078A  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1544  078B  1383               	bcf	3,7
  1545  078C  0800               	movf	0,w
  1546  078D  0607               	xorwf	7,w	;volatile
  1547  078E  1903               	skipnz
  1548  078F  2F91               	goto	u381
  1549  0790  2F92               	goto	u380
  1550  0791                     u381:	
  1551  0791  2FAA               	goto	l1098
  1552  0792                     u380:	
  1553  0792                     l1092:	
  1554  0792  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1555  0793  0084               	movwf	4
  1556  0794  1783               	bsf	3,7
  1557  0795  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1558  0796  1383               	bcf	3,7
  1559  0797  0800               	movf	0,w
  1560  0798  0608               	xorwf	8,w	;volatile
  1561  0799  1903               	skipnz
  1562  079A  2F9C               	goto	u391
  1563  079B  2F9D               	goto	u390
  1564  079C                     u391:	
  1565  079C  2FAA               	goto	l1098
  1566  079D                     u390:	
  1567  079D                     l1094:	
  1568  079D  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1569  079E  0084               	movwf	4
  1570  079F  1783               	bsf	3,7
  1571  07A0  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1572  07A1  1383               	bcf	3,7
  1573  07A2  0800               	movf	0,w
  1574  07A3  0609               	xorwf	9,w	;volatile
  1575  07A4  1903               	skipnz
  1576  07A5  2FA7               	goto	u401
  1577  07A6  2FA8               	goto	u400
  1578  07A7                     u401:	
  1579  07A7  2FAA               	goto	l1098
  1580  07A8                     u400:	
  1581  07A8                     l1096:	
  1582                           
  1583                           ;GPIO.c: 41:     {;GPIO.c: 43:        ret = 0;
  1584  07A8  01F7               	clrf	GPIO_Init_Pin@ret
  1585                           
  1586                           ;GPIO.c: 44:     }
  1587  07A9  2FCD               	goto	l1100
  1588  07AA                     l1098:	
  1589                           
  1590                           ;GPIO.c: 46:     {;GPIO.c: 47:         ((*DirRegAddress)=(*DirRegAddress & ~(1<<pin_numb
      +                          er))|(dir<<pin_number));
  1591  07AA  0873               	movf	GPIO_Init_Pin@dir,w
  1592  07AB  00F4               	movwf	??_GPIO_Init_Pin
  1593  07AC  0A72               	incf	GPIO_Init_Pin@pin_number,w
  1594  07AD  2FB0               	goto	u414
  1595  07AE                     u415:	
  1596  07AE  1003               	clrc
  1597  07AF  0DF4               	rlf	??_GPIO_Init_Pin,f
  1598  07B0                     u414:	
  1599  07B0  3EFF               	addlw	-1
  1600  07B1  1D03               	skipz
  1601  07B2  2FAE               	goto	u415
  1602  07B3  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1603  07B4  0084               	movwf	4
  1604  07B5  1783               	bsf	3,7
  1605  07B6  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1606  07B7  1383               	bcf	3,7
  1607  07B8  3001               	movlw	1
  1608  07B9  00F5               	movwf	??_GPIO_Init_Pin+1
  1609  07BA  0A72               	incf	GPIO_Init_Pin@pin_number,w
  1610  07BB  2FBE               	goto	u424
  1611  07BC                     u425:	
  1612  07BC  1003               	clrc
  1613  07BD  0DF5               	rlf	??_GPIO_Init_Pin+1,f
  1614  07BE                     u424:	
  1615  07BE  3EFF               	addlw	-1
  1616  07BF  1D03               	skipz
  1617  07C0  2FBC               	goto	u425
  1618  07C1  0875               	movf	??_GPIO_Init_Pin+1,w
  1619  07C2  3AFF               	xorlw	255
  1620  07C3  0500               	andwf	0,w
  1621  07C4  0474               	iorwf	??_GPIO_Init_Pin,w
  1622  07C5  00F6               	movwf	??_GPIO_Init_Pin+2
  1623  07C6  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1624  07C7  0084               	movwf	4
  1625  07C8  1783               	bsf	3,7
  1626  07C9  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1627  07CA  1383               	bcf	3,7
  1628  07CB  0876               	movf	??_GPIO_Init_Pin+2,w
  1629  07CC  0080               	movwf	0
  1630  07CD                     l1100:	
  1631                           
  1632                           ;GPIO.c: 49:     return ret;
  1633  07CD  0877               	movf	GPIO_Init_Pin@ret,w
  1634  07CE                     l40:	
  1635  07CE  0008               	return
  1636  07CF                     __end_of_GPIO_Init_Pin:	
  1637  007E                     btemp	set	126	;btemp
  1638  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    GPIO_Init_Pin@DirRegAddress	PTR unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR1[1]), 

    GPIO_Init_Port@DirRegAddress	PTR unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR1[1]), 


Critical Paths under _main in COMMON

    _main->_SSD_Init
    _SSD_Update->_SSD_Disable
    _SSD_Update->_SSD_Enable
    _SSD_Init->_GPIO_Init_Pin

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2494
                                              9 COMMON     3     3      0
                           _SSD_Init
                     _SSD_Set_Symbol
                         _SSD_Update
 ---------------------------------------------------------------------------------
 (1) _SSD_Update                                           1     1      0      44
                                              3 COMMON     1     1      0
                     _SSD_Data_write
                        _SSD_Disable
                         _SSD_Enable
 ---------------------------------------------------------------------------------
 (2) _SSD_Enable                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SSD_Disable                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SSD_Data_write                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SSD_Set_Symbol                                       3     2      1     272
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _SSD_Init                                             1     1      0    2178
                                              8 COMMON     1     1      0
                      _GPIO_Init_Pin
                     _GPIO_Init_Port
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Port                                       7     4      3     338
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Pin                                        8     4      4    1840
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SSD_Init
     _GPIO_Init_Pin
     _GPIO_Init_Port
   _SSD_Set_Symbol
   _SSD_Update
     _SSD_Data_write
     _SSD_Disable
     _SSD_Enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jan 15 02:32:16 2020

     __end_of_SSD_Data_write 0603                   _SSD_Update 0656                  __CFG_CP$OFF 0000  
                         l40 07CE                           l35 0714                          l141 06C4  
                        l150 0680                          l144 05F6                          l160 062A  
                        l172 0602                          l169 0655                          u300 06D2  
                        u301 06D1                          u310 06DD                          u311 06DC  
                        u400 07A8                          u320 06E8                          u401 07A7  
                        u321 06E7                          u330 06F3                          u331 06F2  
                        u340 06FE                          u341 06FD                          u414 07B0  
                        u350 0704                          u430 0662                          u415 07AE  
                        u351 0703                          u431 0661                          u424 07BE  
                        u360 077C                          u440 0674                          u425 07BC  
                        u361 077B                          u441 0673                          u370 0787  
               __CFG_CPD$OFF 0000                          u371 0786                          u380 0792  
                        u381 0791                          u390 079D                          u391 079C  
                        u607 0753                          u587 0720                          u597 0739  
                        fsr0 0004                          indf 0000                 __CFG_FOSC$HS 0000  
               __CFG_LVP$OFF 0000                         l1100 07CD                         l1110 0611  
                       l1112 0617                         l1104 0604                         l1120 062C  
                       l1106 0605                         l1122 062D                         l1060 06C5  
                       l1140 06B1                         l1108 060B                         l1124 0634  
                       l1070 06F3                         l1062 06C5                         l1142 06BF  
                       l1134 0681                         l1118 05F7                         l1126 063B  
                       l1150 0663                         l1080 070B                         l1072 06FE  
                       l1064 06D2                         l1136 0699                         l1144 05EE  
                       l1128 0642                         l1160 0675                         l1152 0664  
                       l1090 0787                         l1066 06DD                         l1074 06FF  
                       l1138 069E                         l1162 067A                         l1154 066A  
                       l1146 0656                         l1170 072E                         l1092 0792  
                       l1084 076D                         l1076 0704                         l1068 06E8  
                       l1156 066E                         l1172 0733                         l1164 0715  
                       l1094 079D                         l1086 076F                         l1078 0707  
                       l1158 0674                         l1174 074D                         l1166 071A  
                       l1096 07A8                         l1088 077C                         l1336 064A  
                       l1176 075A                         l1168 0727                         l1098 07AA  
                       l1338 061F                         l1178 0764                 __CFG_WRT$OFF 0000  
                       _main 0715                         btemp 007E                         start 0000  
              _GPIO_Init_Pin 076D              ?_SSD_Data_write 0070               _SSD_Set_Symbol 05ED  
                      ?_main 0070                __CFG_WDTE$OFF 0000                        _PORTB 0006  
                      _PORTD 0008                        _TRISA 0085                        _TRISB 0086  
                      _TRISC 0087                        _TRISD 0088                        _TRISE 0089  
          _GPIO_Init_Port$65 0075             __end_of_SSD_Init 06C5               __CFG_BOREN$OFF 0000  
                      status 0003                        wtemp0 007E                 SSD_Disable@s 0072  
                ?_SSD_Enable 0070               ?_GPIO_Init_Pin 0070              __initialization 07CF  
               __end_of_main 076D       __end_of_SSD_Set_Symbol 05F7               _GPIO_Init_Port 06C5  
                ?_SSD_Update 0070                       ??_main 0079  GPIO_Init_Port@DirRegAddress 0070  
 GPIO_Init_Pin@DirRegAddress 0070                       _Buffer 0029               __CFG_PWRTE$OFF 0000  
     __end_of_GPIO_Init_Port 0715              ?_SSD_Set_Symbol 0070     SW_Update@SW_Time_Counter 007D  
               __pdataCOMMON 007D          __size_of_SSD_Enable 002B          __size_of_SSD_Update 002B  
    __end_of__initialization 07FC              ??_GPIO_Init_Pin 0074             GPIO_Init_Pin@dir 0073  
           GPIO_Init_Pin@ret 0077                 ?_SSD_Disable 0070              ?_GPIO_Init_Port 0070  
             __pcstackCOMMON 0070                 __pidataBANK0 05E9                    ?_SSD_Init 0070  
                 __pbssBANK0 0020             ??_SSD_Data_write 0070                   __pmaintext 0715  
                 ??_SSD_Init 0078                      _SW_DATA 0020          SSD_Set_Symbol@index 0070  
               ??_SSD_Enable 0070                 ??_SSD_Update 0073                   _currentSSD 007C  
                    __ptext1 0656                      __ptext2 062B                      __ptext3 0603  
                    __ptext4 05F7                      __ptext5 05ED                      __ptext6 0681  
                    __ptext7 06C5                      __ptext8 076D           __end_of_SSD_Enable 0656  
       end_of_initialization 07FC           __end_of_SSD_Update 0681             ??_SSD_Set_Symbol 0071  
       __size_of_SSD_Disable 0028      GPIO_Init_Pin@pin_number 0072             ??_GPIO_Init_Port 0073  
          GPIO_Init_Port@dir 0072                __pidataCOMMON 05E8                  SSD_Enable@s 0072  
          __size_of_SSD_Init 0044          start_initialization 07CF        __end_of_GPIO_Init_Pin 07CF  
                __pdataBANK0 002E                  __pbssCOMMON 007C                    ___latbits 0002  
    __size_of_SSD_Data_write 000C                     _SSD_Init 0681         SSD_Set_Symbol@symbol 0072  
              ??_SSD_Disable 0070   SSD_Update@SSD_Time_Counter 002D                __size_of_main 0058  
        __end_of_SSD_Disable 062B      __size_of_SSD_Set_Symbol 000A      __size_of_GPIO_Init_Port 0050  
             _SSD_Data_write 05F7       __size_of_GPIO_Init_Pin 0062                  _SSD_LOT_ARR 002E  
                _SSD_Disable 0603                   _SSD_Enable 062B  
