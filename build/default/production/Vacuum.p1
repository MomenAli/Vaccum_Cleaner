Version 4.0 HI-TECH Software Intermediate Code
"18 Vacuum.c
[; ;Vacuum.c: 18: static MOTOR_SPEET_t motor_speed;
[c E850 140 90 10 .. ]
[n E850 . LOW_SPEED MID_SPEED HIGH_SPEED  ]
"40
[; ;Vacuum.c: 40:     LED_Init(LED_ALARM,LED_OFF);
[c E876 0 .. ]
[n E876 . LED_ALARM  ]
[c E879 0 1 .. ]
[n E879 . LED_OFF LED_ON  ]
"29 ./Led.h
[; ;./Led.h: 29: uint8 LED_Init(LED_t led, LEDState_t state);
[v _LED_Init `(uc ~T0 @X0 0 ef2`E876`E879 ]
"21 Vacuum.c
[; ;Vacuum.c: 21: static void Switch_Event_Handler(void);
[v _Switch_Event_Handler `(v ~T0 @X0 0 sf ]
"80
[; ;Vacuum.c: 80:     if(SW_GetState(SW_PLUS) == SW_PRE_PRESSED && motor_speed != HIGH_SPEED)
[c E861 0 1 2 .. ]
[n E861 . SW_PLUS SW_MINUS SW_PRESSURE  ]
"64 ./SW.h
[; ;./SW.h: 64: uint8 SW_GetState(SW_t sw);
[v _SW_GetState `(uc ~T0 @X0 0 ef1`E861 ]
"80 Vacuum.c
[; ;Vacuum.c: 80:     if(SW_GetState(SW_PLUS) == SW_PRE_PRESSED && motor_speed != HIGH_SPEED)
[c E866 0 1 2 3 .. ]
[n E866 . SW_RELEASED SW_PRE_PRESSED SW_PRESSED SW_PRE_RELEASED  ]
"31 ./Led.h
[; ;./Led.h: 31: void LED_SetState(LED_t led, LEDState_t state);
[v _LED_SetState `(v ~T0 @X0 0 ef2`E876`E879 ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"18 ./HW.h
[p x FOSC = HS ]
"19
[p x WDTE = OFF ]
"20
[p x PWRTE = OFF ]
"21
[p x BOREN = OFF ]
"22
[p x LVP = OFF ]
"23
[p x CPD = OFF ]
"24
[p x WRT = OFF ]
"25
[p x CP = OFF ]
"18 Vacuum.c
[; ;Vacuum.c: 18: static MOTOR_SPEET_t motor_speed;
[v _motor_speed `E850 ~T0 @X0 1 s ]
"30
[; ;Vacuum.c: 30: static uint16 pressure_sw_counter;
[v _pressure_sw_counter `ui ~T0 @X0 1 s ]
"32
[; ;Vacuum.c: 32: void VC_Init(MOTOR_SPEET_t speed)
[v _VC_Init `(v ~T0 @X0 1 ef1`E850 ]
"33
[; ;Vacuum.c: 33: {
{
[e :U _VC_Init ]
"32
[; ;Vacuum.c: 32: void VC_Init(MOTOR_SPEET_t speed)
[v _speed `E850 ~T0 @X0 1 r1 ]
"33
[; ;Vacuum.c: 33: {
[f ]
"35
[; ;Vacuum.c: 35:     motor_speed = speed;
[e = _motor_speed _speed ]
"40
[; ;Vacuum.c: 40:     LED_Init(LED_ALARM,LED_OFF);
[e ( _LED_Init (2 , . `E876 0 . `E879 0 ]
"42
[; ;Vacuum.c: 42:     pressure_sw_counter = 0;
[e = _pressure_sw_counter -> -> 0 `i `ui ]
"43
[; ;Vacuum.c: 43: }
[e :UE 95 ]
}
"44
[; ;Vacuum.c: 44: MOTOR_SPEET_t VC_GetSpeed(void)
[v _VC_GetSpeed `(E850 ~T0 @X0 1 ef ]
"45
[; ;Vacuum.c: 45: {
{
[e :U _VC_GetSpeed ]
[f ]
"47
[; ;Vacuum.c: 47:     return motor_speed;
[e ) _motor_speed ]
[e $UE 96  ]
"48
[; ;Vacuum.c: 48: }
[e :UE 96 ]
}
"49
[; ;Vacuum.c: 49: void VC_Update(void)
[v _VC_Update `(v ~T0 @X0 1 ef ]
"50
[; ;Vacuum.c: 50: {
{
[e :U _VC_Update ]
[f ]
"51
[; ;Vacuum.c: 51:     static uint8 VC_TICK_COUNTER = 0;
[v F901 `uc ~T0 @X0 1 s VC_TICK_COUNTER ]
[i F901
-> -> 0 `i `uc
]
"52
[; ;Vacuum.c: 52:     VC_TICK_COUNTER += (5);
[e =+ F901 -> -> 5 `i `uc ]
"54
[; ;Vacuum.c: 54:     if(VC_TICK_COUNTER != (20))
[e $ ! != -> F901 `i -> 20 `i 98  ]
"55
[; ;Vacuum.c: 55:         return;
[e $UE 97  ]
[e :U 98 ]
"56
[; ;Vacuum.c: 56:     VC_TICK_COUNTER = 0;
[e = F901 -> -> 0 `i `uc ]
"67
[; ;Vacuum.c: 67:     Switch_Event_Handler();
[e ( _Switch_Event_Handler ..  ]
"72
[; ;Vacuum.c: 72: }
[e :UE 97 ]
}
"74
[; ;Vacuum.c: 74: static void Switch_Event_Handler(void)
[v _Switch_Event_Handler `(v ~T0 @X0 1 sf ]
"75
[; ;Vacuum.c: 75: {
{
[e :U _Switch_Event_Handler ]
[f ]
"80
[; ;Vacuum.c: 80:     if(SW_GetState(SW_PLUS) == SW_PRE_PRESSED && motor_speed != HIGH_SPEED)
[e $ ! && == -> ( _SW_GetState (1 . `E861 0 `i -> . `E866 1 `i != -> _motor_speed `ui -> . `E850 2 `ui 100  ]
"81
[; ;Vacuum.c: 81:     {
{
"83
[; ;Vacuum.c: 83:         switch(motor_speed)
[e $U 102  ]
"84
[; ;Vacuum.c: 84:         {
{
"85
[; ;Vacuum.c: 85:             case LOW_SPEED:
[e :U 103 ]
"86
[; ;Vacuum.c: 86:                 motor_speed = MID_SPEED;
[e = _motor_speed . `E850 1 ]
"87
[; ;Vacuum.c: 87:                 break;
[e $U 101  ]
"88
[; ;Vacuum.c: 88:             case MID_SPEED:
[e :U 104 ]
"89
[; ;Vacuum.c: 89:                 motor_speed = HIGH_SPEED;
[e = _motor_speed . `E850 2 ]
"90
[; ;Vacuum.c: 90:                 break;
[e $U 101  ]
"91
[; ;Vacuum.c: 91:             default:
[e :U 105 ]
"93
[; ;Vacuum.c: 93:                 break;
[e $U 101  ]
"94
[; ;Vacuum.c: 94:         }
}
[e $U 101  ]
[e :U 102 ]
[e [\ -> _motor_speed `ui , $ -> . `E850 0 `ui 103
 , $ -> . `E850 1 `ui 104
 105 ]
[e :U 101 ]
"95
[; ;Vacuum.c: 95:     }
}
[e :U 100 ]
"101
[; ;Vacuum.c: 101:     if((SW_GetState(SW_MINUS) == SW_PRE_PRESSED) && (motor_speed != LOW_SPEED))
[e $ ! && == -> ( _SW_GetState (1 . `E861 1 `i -> . `E866 1 `i != -> _motor_speed `ui -> . `E850 0 `ui 106  ]
"102
[; ;Vacuum.c: 102:     {
{
"105
[; ;Vacuum.c: 105:         switch(motor_speed)
[e $U 108  ]
"106
[; ;Vacuum.c: 106:         {
{
"107
[; ;Vacuum.c: 107:             case MID_SPEED:
[e :U 109 ]
"108
[; ;Vacuum.c: 108:                 motor_speed = LOW_SPEED;
[e = _motor_speed . `E850 0 ]
"109
[; ;Vacuum.c: 109:                 break;
[e $U 107  ]
"110
[; ;Vacuum.c: 110:             case HIGH_SPEED:
[e :U 110 ]
"111
[; ;Vacuum.c: 111:                 motor_speed = MID_SPEED;
[e = _motor_speed . `E850 1 ]
"112
[; ;Vacuum.c: 112:                 break;
[e $U 107  ]
"113
[; ;Vacuum.c: 113:             default:
[e :U 111 ]
"115
[; ;Vacuum.c: 115:                 break;
[e $U 107  ]
"116
[; ;Vacuum.c: 116:         }
}
[e $U 107  ]
[e :U 108 ]
[e [\ -> _motor_speed `ui , $ -> . `E850 1 `ui 109
 , $ -> . `E850 2 `ui 110
 111 ]
[e :U 107 ]
"117
[; ;Vacuum.c: 117:     }
}
[e :U 106 ]
"122
[; ;Vacuum.c: 122:     if(SW_GetState(SW_PRESSURE) == SW_PRESSED && (motor_speed != LOW_SPEED))
[e $ ! && == -> ( _SW_GetState (1 . `E861 2 `i -> . `E866 2 `i != -> _motor_speed `ui -> . `E850 0 `ui 112  ]
"123
[; ;Vacuum.c: 123:     {
{
"125
[; ;Vacuum.c: 125:         pressure_sw_counter += (20);
[e =+ _pressure_sw_counter -> -> 20 `i `ui ]
"129
[; ;Vacuum.c: 129:         if( pressure_sw_counter == (30000) )
[e $ ! == _pressure_sw_counter -> -> 30000 `i `ui 113  ]
"130
[; ;Vacuum.c: 130:         {
{
"133
[; ;Vacuum.c: 133:             switch(motor_speed)
[e $U 115  ]
"134
[; ;Vacuum.c: 134:             {
{
"135
[; ;Vacuum.c: 135:                 case MID_SPEED:
[e :U 116 ]
"136
[; ;Vacuum.c: 136:                     motor_speed = LOW_SPEED;
[e = _motor_speed . `E850 0 ]
"137
[; ;Vacuum.c: 137:                     break;
[e $U 114  ]
"138
[; ;Vacuum.c: 138:                 case HIGH_SPEED:
[e :U 117 ]
"139
[; ;Vacuum.c: 139:                     motor_speed = MID_SPEED;
[e = _motor_speed . `E850 1 ]
"140
[; ;Vacuum.c: 140:                     break;
[e $U 114  ]
"141
[; ;Vacuum.c: 141:                 default:
[e :U 118 ]
"143
[; ;Vacuum.c: 143:                     break;
[e $U 114  ]
"144
[; ;Vacuum.c: 144:             }
}
[e $U 114  ]
[e :U 115 ]
[e [\ -> _motor_speed `ui , $ -> . `E850 1 `ui 116
 , $ -> . `E850 2 `ui 117
 118 ]
[e :U 114 ]
"146
[; ;Vacuum.c: 146:             pressure_sw_counter = 0;
[e = _pressure_sw_counter -> -> 0 `i `ui ]
"147
[; ;Vacuum.c: 147:         }
}
[e :U 113 ]
"149
[; ;Vacuum.c: 149:         LED_SetState(LED_ALARM,LED_ON);
[e ( _LED_SetState (2 , . `E876 0 . `E879 1 ]
"150
[; ;Vacuum.c: 150:     }
}
[e $U 119  ]
"151
[; ;Vacuum.c: 151:     else
[e :U 112 ]
"152
[; ;Vacuum.c: 152:     {
{
"153
[; ;Vacuum.c: 153:         pressure_sw_counter = 0;
[e = _pressure_sw_counter -> -> 0 `i `ui ]
"155
[; ;Vacuum.c: 155:         LED_SetState(LED_ALARM,LED_OFF);
[e ( _LED_SetState (2 , . `E876 0 . `E879 0 ]
"156
[; ;Vacuum.c: 156:     }
}
[e :U 119 ]
"157
[; ;Vacuum.c: 157: }
[e :UE 99 ]
}
