Version 4.0 HI-TECH Software Intermediate Code
"35 Motor.c
[; ;Motor.c: 35: static MOTOR_SPEED_t target_angle;
[c E850 140 90 10 .. ]
[n E850 . LOW_SPEED MID_SPEED HIGH_SPEED  ]
"39
[; ;Motor.c: 39: static MOTOR_STATE_t motor_state;
[c E861 0 1 .. ]
[n E861 . MO_NORMAL MO_SWITCHING  ]
"43 ./GPIO.h
[; ;./GPIO.h: 43: uint8 GPIO_Init_Pin(volatile uint8 * DirRegAddress ,uint8 pin_number,uint8 dir );
[v _GPIO_Init_Pin `(uc ~T0 @X0 0 ef3`*Vuc`uc`uc ]
"1437 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1437: extern volatile unsigned char TRISC __attribute__((address(0x087)));
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"278
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 278: extern volatile unsigned char PORTC __attribute__((address(0x007)));
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
[v F842 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic.h
[v __delay `JF842 ~T0 @X0 0 e ]
[p i __delay ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"18 ./HW.h
[p x FOSC = HS ]
"19
[p x WDTE = OFF ]
"20
[p x PWRTE = OFF ]
"21
[p x BOREN = OFF ]
"22
[p x LVP = OFF ]
"23
[p x CPD = OFF ]
"24
[p x WRT = OFF ]
"25
[p x CP = OFF ]
"31 Motor.c
[; ;Motor.c: 31: static uint8 soft_switching_counter;
[v _soft_switching_counter `uc ~T0 @X0 1 s ]
"35
[; ;Motor.c: 35: static MOTOR_SPEED_t target_angle;
[v _target_angle `E850 ~T0 @X0 1 s ]
"37
[; ;Motor.c: 37: static uint8 actual_angle;
[v _actual_angle `uc ~T0 @X0 1 s ]
"39
[; ;Motor.c: 39: static MOTOR_STATE_t motor_state;
[v _motor_state `E861 ~T0 @X0 1 s ]
"41
[; ;Motor.c: 41: void Mo_Init(MOTOR_SPEED_t m)
[v _Mo_Init `(v ~T0 @X0 1 ef1`E850 ]
"42
[; ;Motor.c: 42: {
{
[e :U _Mo_Init ]
"41
[; ;Motor.c: 41: void Mo_Init(MOTOR_SPEED_t m)
[v _m `E850 ~T0 @X0 1 r1 ]
"42
[; ;Motor.c: 42: {
[f ]
"44
[; ;Motor.c: 44:     GPIO_Init_Pin(&(TRISC),(3),(0));
[e ( _GPIO_Init_Pin (3 , , &U _TRISC -> -> 3 `i `uc -> -> 0 `i `uc ]
"45
[; ;Motor.c: 45:     (((PORTC))=((PORTC) & ~(1<<(3)))|(0<<(3)));
[e = _PORTC -> | & -> _PORTC `i ~ << -> 1 `i -> 3 `i << -> 0 `i -> 3 `i `uc ]
"47
[; ;Motor.c: 47:     actual_angle = (170);
[e = _actual_angle -> -> 170 `i `uc ]
"49
[; ;Motor.c: 49:     target_angle = m;
[e = _target_angle _m ]
"51
[; ;Motor.c: 51:     motor_state = MO_SWITCHING;
[e = _motor_state . `E861 1 ]
"53
[; ;Motor.c: 53:     soft_switching_counter = 0;
[e = _soft_switching_counter -> -> 0 `i `uc ]
"54
[; ;Motor.c: 54: }
[e :UE 95 ]
}
"55
[; ;Motor.c: 55: void Mo_SetSpeed(MOTOR_SPEED_t m)
[v _Mo_SetSpeed `(v ~T0 @X0 1 ef1`E850 ]
"56
[; ;Motor.c: 56: {
{
[e :U _Mo_SetSpeed ]
"55
[; ;Motor.c: 55: void Mo_SetSpeed(MOTOR_SPEED_t m)
[v _m `E850 ~T0 @X0 1 r1 ]
"56
[; ;Motor.c: 56: {
[f ]
"58
[; ;Motor.c: 58:     if(target_angle == m)return;
[e $ ! == -> _target_angle `ui -> _m `ui 97  ]
[e $UE 96  ]
[e :U 97 ]
"65
[; ;Motor.c: 65:     motor_state = MO_SWITCHING;
[e = _motor_state . `E861 1 ]
"66
[; ;Motor.c: 66:     target_angle = m;
[e = _target_angle _m ]
"68
[; ;Motor.c: 68: }
[e :UE 96 ]
}
"69
[; ;Motor.c: 69: void Mo_Update(void)
[v _Mo_Update `(v ~T0 @X0 1 ef ]
"70
[; ;Motor.c: 70: {
{
[e :U _Mo_Update ]
[f ]
"72
[; ;Motor.c: 72:     static uint8 motor_tick_counter = 0;
[v F893 `uc ~T0 @X0 1 s motor_tick_counter ]
[i F893
-> -> 0 `i `uc
]
"74
[; ;Motor.c: 74:     motor_tick_counter += (10);
[e =+ F893 -> -> 10 `i `uc ]
"76
[; ;Motor.c: 76:     if(motor_tick_counter != (20)) return;
[e $ ! != -> F893 `i -> 20 `i 99  ]
[e $UE 98  ]
[e :U 99 ]
"78
[; ;Motor.c: 78:     motor_tick_counter = 0;
[e = F893 -> -> 0 `i `uc ]
"80
[; ;Motor.c: 80:     switch(motor_state)
[e $U 101  ]
"81
[; ;Motor.c: 81:     {
{
"82
[; ;Motor.c: 82:         case MO_NORMAL:
[e :U 102 ]
"86
[; ;Motor.c: 86:             if(actual_angle > target_angle)
[e $ ! > -> _actual_angle `ui -> _target_angle `ui 103  ]
"87
[; ;Motor.c: 87:             {
{
"90
[; ;Motor.c: 90:                 actual_angle -= (10);
[e =- _actual_angle -> -> 10 `i `uc ]
"91
[; ;Motor.c: 91:             }
}
[e $U 104  ]
"92
[; ;Motor.c: 92:             else
[e :U 103 ]
"93
[; ;Motor.c: 93:             {
{
"96
[; ;Motor.c: 96:                 actual_angle += (10);
[e =+ _actual_angle -> -> 10 `i `uc ]
"97
[; ;Motor.c: 97:             }
}
[e :U 104 ]
"98
[; ;Motor.c: 98:             break;
[e $U 100  ]
"100
[; ;Motor.c: 100:         case MO_SWITCHING:
[e :U 105 ]
"103
[; ;Motor.c: 103:             if(actual_angle == target_angle){
[e $ ! == -> _actual_angle `ui -> _target_angle `ui 106  ]
{
"108
[; ;Motor.c: 108:                 actual_angle += 5;
[e =+ _actual_angle -> -> 5 `i `uc ]
"109
[; ;Motor.c: 109:                 motor_state = MO_NORMAL;
[e = _motor_state . `E861 0 ]
"110
[; ;Motor.c: 110:             }
}
[e $U 107  ]
"111
[; ;Motor.c: 111:             else
[e :U 106 ]
"112
[; ;Motor.c: 112:             {
{
"115
[; ;Motor.c: 115:                 soft_switching_counter += (20);
[e =+ _soft_switching_counter -> -> 20 `i `uc ]
"117
[; ;Motor.c: 117:                 if(soft_switching_counter == (40))
[e $ ! == -> _soft_switching_counter `i -> 40 `i 108  ]
"118
[; ;Motor.c: 118:                 {
{
"124
[; ;Motor.c: 124:                     if(target_angle > actual_angle)
[e $ ! > -> _target_angle `ui -> _actual_angle `ui 109  ]
"125
[; ;Motor.c: 125:                     {
{
"127
[; ;Motor.c: 127:                         actual_angle++;
[e ++ _actual_angle -> -> 1 `i `uc ]
"128
[; ;Motor.c: 128:                     }
}
[e $U 110  ]
"129
[; ;Motor.c: 129:                     else
[e :U 109 ]
"130
[; ;Motor.c: 130:                     {
{
"132
[; ;Motor.c: 132:                         actual_angle--;
[e -- _actual_angle -> -> 1 `i `uc ]
"133
[; ;Motor.c: 133:                     }
}
[e :U 110 ]
"135
[; ;Motor.c: 135:                     soft_switching_counter = 0;
[e = _soft_switching_counter -> -> 0 `i `uc ]
"136
[; ;Motor.c: 136:                 }
}
[e :U 108 ]
"137
[; ;Motor.c: 137:             }
}
[e :U 107 ]
"138
[; ;Motor.c: 138:             break;
[e $U 100  ]
"139
[; ;Motor.c: 139:         default:
[e :U 111 ]
"141
[; ;Motor.c: 141:             break;
[e $U 100  ]
"142
[; ;Motor.c: 142:     }
}
[e $U 100  ]
[e :U 101 ]
[e [\ -> _motor_state `ui , $ -> . `E861 0 `ui 102
 , $ -> . `E861 1 `ui 105
 111 ]
[e :U 100 ]
"144
[; ;Motor.c: 144: }
[e :UE 98 ]
}
"147
[; ;Motor.c: 147: uint8 Mo_Get_Actual_Angle(void)
[v _Mo_Get_Actual_Angle `(uc ~T0 @X0 1 ef ]
"148
[; ;Motor.c: 148: {
{
[e :U _Mo_Get_Actual_Angle ]
[f ]
"149
[; ;Motor.c: 149:     return actual_angle;
[e ) _actual_angle ]
[e $UE 112  ]
"150
[; ;Motor.c: 150: }
[e :UE 112 ]
}
"151
[; ;Motor.c: 151: void Mo_generate_firing_pulse(void)
[v _Mo_generate_firing_pulse `(v ~T0 @X0 1 ef ]
"152
[; ;Motor.c: 152: {
{
[e :U _Mo_generate_firing_pulse ]
[f ]
"154
[; ;Motor.c: 154:     (((PORTC))=((PORTC) & ~(1<<(3)))|(1<<(3)));
[e = _PORTC -> | & -> _PORTC `i ~ << -> 1 `i -> 3 `i << -> 1 `i -> 3 `i `uc ]
"156
[; ;Motor.c: 156:     _delay((unsigned long)(((100))*(8000000/4000000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
"158
[; ;Motor.c: 158:     (((PORTC))=((PORTC) & ~(1<<(3)))|(0<<(3)));
[e = _PORTC -> | & -> _PORTC `i ~ << -> 1 `i -> 3 `i << -> 0 `i -> 3 `i `uc ]
"159
[; ;Motor.c: 159: }
[e :UE 113 ]
}
